{"primaryContentSections":[{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"UIScrollView"},{"type":"text","text":"는 스토리보드에서 사용할 때마다 에러를 내는 UI 컴포넌트 중 대표적인 친구입니다."},{"type":"text","text":" "},{"type":"text","text":"하지만 언제나처럼 컴퓨터는 잘못이 없죠."},{"type":"text","text":" "},{"type":"text","text":"제대로 알고 사용하지 못해서 일어나는 장애물이라고 생각하고 머리를 정리할 겸 단계별로 알아보겠습니다."}]},{"anchor":"UIScrollView","level":2,"type":"heading","text":"UIScrollView"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"UIScrollView"},{"type":"text","text":"가 뭔지부터 알아보겠습니다."},{"type":"text","text":" "},{"type":"codeVoice","code":"UIScrollView"},{"type":"text","text":"는 화면의 크기를 벗어나는 콘텐츠를 표현할 때 "},{"type":"strong","inlineContent":[{"type":"text","text":"스크롤"}]},{"type":"text","text":"을 통해서 더 많은 정보를 탐색할 수 있도록 해주는 컴포넌트입니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"이 "},{"type":"codeVoice","code":"UIScrollView"},{"type":"text","text":"는 굉장히 중요한 녀석입니다."},{"type":"text","text":" "},{"type":"text","text":"저희가 매일같이 사용하는 "},{"type":"codeVoice","code":"UITableView"},{"type":"text","text":", "},{"type":"codeVoice","code":"UICollectcionView"},{"type":"text","text":"와 같은 스크롤이 가능한 컴포넌트들의 Super Class이기 때문이죠."},{"type":"text","text":" "},{"type":"text","text":"그래서 이런 테이블뷰와 컬렉션뷰에서 스크롤뷰의 메서드와 속성들에 접근할 수 있습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"스크롤뷰는 두 가지 레이아웃으로 나뉘어져 있습니다."},{"type":"text","text":" "},{"type":"codeVoice","code":"Content Layout"},{"type":"text","text":"은 스크롤되며 화면에 표현될 컨텐츠들의 레이아웃을 결정하는 레이아웃입니다."},{"type":"text","text":" "},{"type":"codeVoice","code":"Frame Layout"},{"type":"text","text":"은 화면 안에서 실제로 표현되는 스크롤뷰의 크기와 위치를 결정하는 레이아웃입니다."}]},{"anchor":"ScrollView-오토-레이아웃-잡아주기","level":2,"type":"heading","text":"ScrollView 오토 레이아웃 잡아주기"},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"https:\/\/i.imgur.com\/yfFoTpi.png"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"위 사진처럼 "},{"type":"codeVoice","code":"UIScrollView"},{"type":"text","text":"를 하나 넣어주고 다른 "},{"type":"codeVoice","code":"View"},{"type":"text","text":"들과 마찬가지로 오토레이아웃을 잡아줍니다."},{"type":"text","text":" "},{"type":"text","text":"그런데 다른 "},{"type":"codeVoice","code":"View"},{"type":"text","text":"들과는 다르게 바로 적용이 안되는 것처럼 보입니다?"},{"type":"text","text":" "},{"type":"text","text":"실질적인 Contents가 정의되어 있지 않아서 그런 것이라고 추정하고 있지만 정확한 이유는 잘 모르겠습니다."},{"type":"text","text":" "},{"type":"text","text":"알게 되면 추가 내용으로 적어두겠습니다..!"},{"type":"text","text":" "},{"type":"text","text":"아무튼 Constraints를 보면 잘 적용되어 있는 것을 확인할 수 있습니다."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"https:\/\/i.imgur.com\/DJeenEA.png"}]},{"anchor":"View-추가하고-Layout-Guide-설정하기","level":2,"type":"heading","text":"View 추가하고 Layout Guide 설정하기"},{"type":"paragraph","inlineContent":[{"type":"text","text":"스크롤뷰만 있으면 아무 쓸모가 없겠죠?"},{"type":"text","text":" "},{"type":"text","text":"실제로 스크롤 될 "},{"type":"codeVoice","code":"View"},{"type":"text","text":"를 넣어봅시다."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"https:\/\/i.imgur.com\/LpePYMu.png"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"저는 보기 편하게 스크롤뷰와 겹치게 위치를 잡아주고 이름도 Content View라고 바꿔주었습니다."},{"type":"text","text":" "},{"type":"text","text":"필수 과정은 아닙니다!"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"스크롤 될 실제 컨텐츠를 담을 "},{"type":"codeVoice","code":"View"},{"type":"text","text":"이기 때문에 Content Layout Guide를 이 "},{"type":"codeVoice","code":"View"},{"type":"text","text":"의 Layout과 맞춰줄 겁니다."},{"type":"text","text":" "},{"type":"text","text":"일종의 배경이자 도화지 역할을 하는 Content View의 크기를 컴파일러에게 알려주는 과정인거에요!"}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"https:\/\/i.imgur.com\/wOsENlQ.png"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Content View를 "},{"type":"strong","inlineContent":[{"type":"text","text":"Ctrl키"}]},{"type":"text","text":"를 누른 상태로 "},{"type":"strong","inlineContent":[{"type":"text","text":"Content Layout Guide"}]},{"type":"text","text":"까지 끌어당기면 두 요소간의 레이아웃을 설정해줄 수 있습니다."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"https:\/\/i.imgur.com\/nKGGk8U.png"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Content View의 크기가 곧 스크롤뷰에 들어갈 컨텐츠의 크기이기 때문에 "},{"type":"strong","inlineContent":[{"type":"text","text":"Leading, Top, Trailing, Bottom"}]},{"type":"text","text":"의 Spacing을 모두 "},{"type":"strong","inlineContent":[{"type":"text","text":"0"}]},{"type":"text","text":"으로 설정해줍시다."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"https:\/\/i.imgur.com\/35ivGBf.png"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"현재 스토리보드에 놓여진 값 그대로 Constant 값이 들어가기 때문에 모두 0이 맞는지 확인해보는 작업이 필요합니다!"}]},{"anchor":"Scroll-View의-방향-정해주기","level":2,"type":"heading","text":"Scroll View의 방향 정해주기"},{"type":"paragraph","inlineContent":[{"type":"text","text":"저는 세로로 스크롤되는 화면을 만들고 싶습니다."},{"type":"text","text":" "},{"type":"text","text":"화면이 세로로 스크롤될 때 넓이와 높이 중에 고정되어 있는 값은 넓이죠?"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"스크롤뷰의 "},{"type":"strong","inlineContent":[{"type":"text","text":"Frame Layout Guide"}]},{"type":"text","text":"는 "},{"type":"strong","inlineContent":[{"type":"text","text":"넓이가 고정"}]},{"type":"text","text":"되어 있다면 "},{"type":"strong","inlineContent":[{"type":"text","text":"세로로 스크롤"}]},{"type":"text","text":"되게 작동합니다."},{"type":"text","text":" "},{"type":"text","text":"반대로 "},{"type":"strong","inlineContent":[{"type":"text","text":"높이가 고정"}]},{"type":"text","text":"되어 있다면 "},{"type":"strong","inlineContent":[{"type":"text","text":"가로로 스크롤"}]},{"type":"text","text":"할 수 있습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"왜 Frame Layout Guide를 설정해줘야 하는지 헷갈릴 수 있는데요, "},{"type":"strong","inlineContent":[{"type":"text","text":"Frame Layout"}]},{"type":"text","text":"은 실제 스크롤뷰가 표현될 Layout이라고 했었습니다."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Frame Layout"}]},{"type":"text","text":"의 넓이를 "},{"type":"strong","inlineContent":[{"type":"text","text":"컨텐츠의 넓이"}]},{"type":"text","text":"와 같게 설정하면 컴파일러 Frame 밖에 가로 형태로 표현할 컨텐츠가 더 이상 없다는 걸 알 수 있겠죠?"},{"type":"text","text":" "},{"type":"text","text":"그래서 가로는 고정되고 세로로만 스크롤되게 됩니다."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"https:\/\/i.imgur.com\/4X4dnja.png"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"위에서 Content Layout을 잡아줬을 때처럼 Content View를 "},{"type":"strong","inlineContent":[{"type":"text","text":"Ctrl키"}]},{"type":"text","text":"를 누른채로 "},{"type":"strong","inlineContent":[{"type":"text","text":"Frame Layout Guide"}]},{"type":"text","text":"에 끌어놔줍니다."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"https:\/\/i.imgur.com\/izdGsY0.png"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"그러면 나오는 Constraint 설정 창에서 "},{"type":"strong","inlineContent":[{"type":"text","text":"Equal Width"}]},{"type":"text","text":"를 선택해서 가로를 갖게 만들어줍니다."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"https:\/\/i.imgur.com\/AxjacW3.png"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"물론 위에서처럼 수치가 현재 스토리보드에 맞게 들어가기 때문에 한 번 확인해주어야 합니다."},{"type":"text","text":" "},{"type":"text","text":"이번에는 비율로서 다뤄지는 값이기 때문에 Multiplier가 1인지 확인해줍니다!"}]},{"anchor":"높이-정해주기","level":2,"type":"heading","text":"높이 정해주기"},{"type":"paragraph","inlineContent":[{"type":"text","text":"여기까지가 스크롤뷰를 스토리보드에서 설정해주는 방법입니다."},{"type":"text","text":" "},{"type":"text","text":"그런데 아직 빨간 에러가 사라지지 않았죠?"},{"type":"text","text":" "},{"type":"text","text":"컨텐츠의 "},{"type":"strong","inlineContent":[{"type":"text","text":"넓이"}]},{"type":"text","text":"는 스크롤뷰의 "},{"type":"strong","inlineContent":[{"type":"text","text":"Frame Layout"}]},{"type":"text","text":"과 같게 만들어주었기 때문에 정해졌지만, "},{"type":"strong","inlineContent":[{"type":"text","text":"높이"}]},{"type":"text","text":"는 아직 정해주지 않았기 때문입니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"따라서 Content View의 높이를 고정 값으로 정해주거나, 실제로 내부에 컴포넌트들을 집어넣어주면 해당 에러는 사라집니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"추천하는 방법으로는 "},{"type":"codeVoice","code":"Content View"},{"type":"text","text":"에 높이 값을 주되, "},{"type":"strong","inlineContent":[{"type":"text","text":"Priority"}]},{"type":"text","text":"를 내려주어서 정해진 높이 이상이 필요하면 동적으로 늘어나게 하는 것이 좋습니다."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"https:\/\/i.imgur.com\/ZJHbFt1.png"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Content View를 "},{"type":"strong","inlineContent":[{"type":"text","text":"Ctrl"}]},{"type":"text","text":"키를 누른채로 끌었다가 Content View 본인에게 놔줍니다."},{"type":"text","text":" "},{"type":"text","text":"그 상태에서 "},{"type":"strong","inlineContent":[{"type":"text","text":"Height"}]},{"type":"text","text":"를 설정해주면, 현재 스토리보드에 설정된 높이가 Constraint에 추가됩니다."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"https:\/\/i.imgur.com\/y7gCOHE.png"}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Priority"}]},{"type":"text","text":"도 마찬가지로 Constraint에서 수정해줄 수 있습니다. 기본값인 1000에서 "},{"type":"strong","inlineContent":[{"type":"text","text":"낮은 값"}]},{"type":"text","text":"으로 설정해줍시다!"},{"type":"text","text":" "},{"type":"text","text":"이 값은 내부에 들어올 컴포넌트들의 높이 Priority보다 낮으면 됩니다."},{"type":"text","text":" "},{"type":"text","text":"저는 넉넉하게 250으로 설정해주었습니다."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"https:\/\/i.imgur.com\/H6L2VbB.png"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"이렇게 에러가 없는 깔끔한 스토리보드가 되었네요."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"UIScrollView"},{"type":"text","text":"는 다루기 굉장히 까다로운 녀석이지만, 개념 자체는 쉬운 것 같아요."},{"type":"text","text":" "},{"type":"text","text":"개념을 이해하고 다룬다면 익숙해지는데 많은 시간이 걸리지 않을 것이라고 생각합니다!"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/junnosblog\/12.scrollviewusingautolayout"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/12.ScrollViewUsingAutoLayout","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"ScrollView 오토레이아웃을 StoryBoard에서 잡아보자!"}],"kind":"article","metadata":{"roleHeading":"Article","title":"🍎 Swift - ScrollView 오토 레이아웃으로 구현하기","role":"article","modules":[{"name":"아요에스위프트"}]},"hierarchy":{"paths":[["doc:\/\/JunnosBlog\/documentation\/JunnosBlog","doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/SwiftCategory"]]},"seeAlsoSections":[{"title":"Posts","identifiers":["doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/32.Regex01","doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/17.DownSampling","doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/16.PropertyWrapper","doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/15.PHPicker","doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/14.ReactorKit","doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/13.RxWithoutRx","doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/11.Bounds&Frame","doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/10.ViewControllerLifeCycle","doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/09.StructClass","doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/08.ARC","doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/07.Coordinator","doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/06.MVVM_CleanArchitecture02","doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/05.MVVM_CleanArchitecture01","doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/04.RxSwift","doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/03.Closure03","doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/02.Closure02","doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/01.Closure01"],"generated":true}],"references":{"https://i.imgur.com/wOsENlQ.png":{"alt":null,"type":"image","identifier":"https:\/\/i.imgur.com\/wOsENlQ.png","variants":[{"url":"https:\/\/i.imgur.com\/wOsENlQ.png","traits":["1x","light"]}]},"https://i.imgur.com/izdGsY0.png":{"alt":null,"type":"image","identifier":"https:\/\/i.imgur.com\/izdGsY0.png","variants":[{"url":"https:\/\/i.imgur.com\/izdGsY0.png","traits":["1x","light"]}]},"doc://JunnosBlog/documentation/JunnosBlog":{"role":"collection","title":"아요에스위프트","abstract":[],"identifier":"doc:\/\/JunnosBlog\/documentation\/JunnosBlog","kind":"symbol","type":"topic","url":"\/documentation\/junnosblog"},"doc://JunnosBlog/documentation/JunnosBlog/07.Coordinator":{"role":"article","title":"🍎 Swift - Coordinator 패턴","abstract":[{"type":"text","text":"Navigation 해결사 등장"}],"identifier":"doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/07.Coordinator","kind":"article","type":"topic","url":"\/documentation\/junnosblog\/07.coordinator"},"doc://JunnosBlog/documentation/JunnosBlog/32.Regex01":{"role":"article","title":"🍎 Swift - Regex.01","abstract":[{"type":"text","text":"아는 사람들은 잘 써먹는 그것."}],"identifier":"doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/32.Regex01","kind":"article","type":"topic","url":"\/documentation\/junnosblog\/32.regex01"},"doc://JunnosBlog/documentation/JunnosBlog/09.StructClass":{"role":"article","title":"🍎 Swift - Struct vs Class","abstract":[{"type":"text","text":"구조체와 클래스"}],"identifier":"doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/09.StructClass","kind":"article","type":"topic","url":"\/documentation\/junnosblog\/09.structclass"},"https://i.imgur.com/35ivGBf.png":{"alt":null,"type":"image","identifier":"https:\/\/i.imgur.com\/35ivGBf.png","variants":[{"url":"https:\/\/i.imgur.com\/35ivGBf.png","traits":["1x","light"]}]},"https://i.imgur.com/LpePYMu.png":{"alt":null,"type":"image","identifier":"https:\/\/i.imgur.com\/LpePYMu.png","variants":[{"url":"https:\/\/i.imgur.com\/LpePYMu.png","traits":["1x","light"]}]},"doc://JunnosBlog/documentation/JunnosBlog/10.ViewControllerLifeCycle":{"role":"article","title":"🍎 Swift - View Controller의 Life Cycle","abstract":[{"type":"text","text":"View Controller의 삶과 죽음"}],"identifier":"doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/10.ViewControllerLifeCycle","kind":"article","type":"topic","url":"\/documentation\/junnosblog\/10.viewcontrollerlifecycle"},"https://i.imgur.com/yfFoTpi.png":{"alt":null,"type":"image","identifier":"https:\/\/i.imgur.com\/yfFoTpi.png","variants":[{"url":"https:\/\/i.imgur.com\/yfFoTpi.png","traits":["1x","light"]}]},"doc://JunnosBlog/documentation/JunnosBlog/16.PropertyWrapper":{"role":"article","title":"🍎 Swift - Property Wrapper","abstract":[{"type":"text","text":"안전하고 간편한 새로운 Photo Picker!"}],"identifier":"doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/16.PropertyWrapper","kind":"article","type":"topic","url":"\/documentation\/junnosblog\/16.propertywrapper"},"https://i.imgur.com/AxjacW3.png":{"alt":null,"type":"image","identifier":"https:\/\/i.imgur.com\/AxjacW3.png","variants":[{"url":"https:\/\/i.imgur.com\/AxjacW3.png","traits":["1x","light"]}]},"https://i.imgur.com/DJeenEA.png":{"alt":null,"type":"image","identifier":"https:\/\/i.imgur.com\/DJeenEA.png","variants":[{"url":"https:\/\/i.imgur.com\/DJeenEA.png","traits":["1x","light"]}]},"Swift.png":{"alt":"Swift","type":"image","identifier":"Swift.png","variants":[{"url":"\/images\/Swift.png","traits":["1x","light"]}]},"doc://JunnosBlog/documentation/JunnosBlog/13.RxWithoutRx":{"role":"article","title":"🍎 Swift - Rx 없이 Reactive Binding 해보기","abstract":[{"type":"text","text":"Rx없이 Rx와 같은 기능을 구현해볼까요?"}],"identifier":"doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/13.RxWithoutRx","kind":"article","type":"topic","url":"\/documentation\/junnosblog\/13.rxwithoutrx"},"doc://JunnosBlog/documentation/JunnosBlog/14.ReactorKit":{"role":"article","title":"🍎 Swift - ReactorKit","abstract":[{"type":"text","text":"협업을 위한 ViewModel 솔루션: ReactorKit"}],"identifier":"doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/14.ReactorKit","kind":"article","type":"topic","url":"\/documentation\/junnosblog\/14.reactorkit"},"doc://JunnosBlog/documentation/JunnosBlog/SwiftCategory":{"images":[{"type":"card","identifier":"Swift.png"}],"role":"collectionGroup","title":"Swift","abstract":[{"type":"text","text":"This is Swift."}],"identifier":"doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/SwiftCategory","kind":"article","type":"topic","url":"\/documentation\/junnosblog\/swiftcategory"},"https://i.imgur.com/ZJHbFt1.png":{"alt":null,"type":"image","identifier":"https:\/\/i.imgur.com\/ZJHbFt1.png","variants":[{"url":"https:\/\/i.imgur.com\/ZJHbFt1.png","traits":["1x","light"]}]},"https://i.imgur.com/H6L2VbB.png":{"alt":null,"type":"image","identifier":"https:\/\/i.imgur.com\/H6L2VbB.png","variants":[{"url":"https:\/\/i.imgur.com\/H6L2VbB.png","traits":["1x","light"]}]},"doc://JunnosBlog/documentation/JunnosBlog/06.MVVM_CleanArchitecture02":{"role":"article","title":"🍎 Swift - MVVM, Clean Architecture.02","abstract":[{"type":"text","text":"두 아키텍처를 결합해봅시다."}],"identifier":"doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/06.MVVM_CleanArchitecture02","kind":"article","type":"topic","url":"\/documentation\/junnosblog\/06.mvvm_cleanarchitecture02"},"doc://JunnosBlog/documentation/JunnosBlog/05.MVVM_CleanArchitecture01":{"role":"article","title":"🍎 Swift - MVVM, Clean Architecture.01","abstract":[{"type":"text","text":"iOS 개발자라면 꼭 알아야 할 아키텍처"}],"identifier":"doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/05.MVVM_CleanArchitecture01","kind":"article","type":"topic","url":"\/documentation\/junnosblog\/05.mvvm_cleanarchitecture01"},"doc://JunnosBlog/documentation/JunnosBlog/02.Closure02":{"role":"article","title":"🍎 Swift - 클로저(Closure).02","abstract":[{"type":"text","text":"Trailing 클로저에 대해 알아봅시다."}],"identifier":"doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/02.Closure02","kind":"article","type":"topic","url":"\/documentation\/junnosblog\/02.closure02"},"doc://JunnosBlog/documentation/JunnosBlog/17.DownSampling":{"role":"article","title":"🍎 Swift - 다운샘플링","abstract":[{"type":"text","text":"모바일 환경에서 고해상도 이미지는 쓸 모 없 다."}],"identifier":"doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/17.DownSampling","kind":"article","type":"topic","url":"\/documentation\/junnosblog\/17.downsampling"},"doc://JunnosBlog/documentation/JunnosBlog/03.Closure03":{"role":"article","title":"🍎 Swift - 클로저(Closure).03","abstract":[{"type":"codeVoice","code":"@escaping"},{"type":"text","text":" 클로저에 대해 알아봅시다."}],"identifier":"doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/03.Closure03","kind":"article","type":"topic","url":"\/documentation\/junnosblog\/03.closure03"},"doc://JunnosBlog/documentation/JunnosBlog/15.PHPicker":{"role":"article","title":"🍎 Swift - PHPicker","abstract":[{"type":"text","text":"안전하고 간편한 새로운 Photo Picker!"}],"identifier":"doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/15.PHPicker","kind":"article","type":"topic","url":"\/documentation\/junnosblog\/15.phpicker"},"doc://JunnosBlog/documentation/JunnosBlog/01.Closure01":{"role":"article","title":"🍎 Swift - 클로저(Closure).01","abstract":[{"type":"text","text":"팔방미인 클로저에 대해 알아봅시다."}],"identifier":"doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/01.Closure01","kind":"article","type":"topic","url":"\/documentation\/junnosblog\/01.closure01"},"https://i.imgur.com/4X4dnja.png":{"alt":null,"type":"image","identifier":"https:\/\/i.imgur.com\/4X4dnja.png","variants":[{"url":"https:\/\/i.imgur.com\/4X4dnja.png","traits":["1x","light"]}]},"doc://JunnosBlog/documentation/JunnosBlog/08.ARC":{"role":"article","title":"🍎 Swift - ARC(strong, weak, unowned)","abstract":[{"type":"text","text":"쎈 애랑 약한 애랑 없는 애"}],"identifier":"doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/08.ARC","kind":"article","type":"topic","url":"\/documentation\/junnosblog\/08.arc"},"doc://JunnosBlog/documentation/JunnosBlog/11.Bounds&Frame":{"role":"article","title":"🍎 Swift - Bounds vs Frame","abstract":[{"type":"text","text":"View의 크기와 몸집"}],"identifier":"doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/11.Bounds&Frame","kind":"article","type":"topic","url":"\/documentation\/junnosblog\/11.bounds&frame"},"https://i.imgur.com/y7gCOHE.png":{"alt":null,"type":"image","identifier":"https:\/\/i.imgur.com\/y7gCOHE.png","variants":[{"url":"https:\/\/i.imgur.com\/y7gCOHE.png","traits":["1x","light"]}]},"doc://JunnosBlog/documentation/JunnosBlog/04.RxSwift":{"role":"article","title":"🍎 Swift - RxSwift","abstract":[{"type":"text","text":"Reactive한 Swift의 시작"}],"identifier":"doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/04.RxSwift","kind":"article","type":"topic","url":"\/documentation\/junnosblog\/04.rxswift"},"https://i.imgur.com/nKGGk8U.png":{"alt":null,"type":"image","identifier":"https:\/\/i.imgur.com\/nKGGk8U.png","variants":[{"url":"https:\/\/i.imgur.com\/nKGGk8U.png","traits":["1x","light"]}]}}}