{"primaryContentSections":[{"kind":"content","content":[{"anchor":"","level":2,"type":"heading","text":""},{"type":"paragraph","inlineContent":[{"type":"text","text":"혼자 공부하다 도저히 안되겠어서 정리해보는 태그를 하나 만들었습니다!"},{"type":"text","text":" "},{"type":"text","text":"첫 게시물의 주제는 느낌적으로 써왔지만 제대로 공부해본 적은 없는 클로저입니다."}]},{"anchor":"클로저란","level":2,"type":"heading","text":"클로저란?"},{"type":"paragraph","inlineContent":[{"type":"text","text":"지금까지 클로저하면 그냥 "},{"type":"strong","inlineContent":[{"type":"text","text":"“그룹으로 실행되는 코드 덩어리”"}]},{"type":"text","text":" 정도로 생각하고 사용해왔습니다."},{"type":"text","text":" "},{"type":"text","text":"그런데 자료를 찾아보니 어머나 글쎄 그게 전부네요?"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"물론 여러가지 옵션들이 추가되면서 다양하게 활용이 가능하지만 기본적인 개념은 정말로 "},{"type":"strong","inlineContent":[{"type":"text","text":"코드 덩어리"}]},{"type":"text","text":" 그 이상도 이하도 아니였습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"그런데 충격적인 사실이 하나 있었습니다."},{"type":"text","text":" "},{"type":"text","text":"바로 "},{"type":"strong","inlineContent":[{"type":"text","text":"함수"}]},{"type":"text","text":"도 클로저였던 것이죠."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"함수야 다른 언어들에서도 기본적인 개념이라서 Swift에서도 써왔는데 생각해보면 클로저나 함수나 하는 기능은 같습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"정확하게 살펴보면 "},{"type":"strong","inlineContent":[{"type":"text","text":"함수"}]},{"type":"text","text":"는 "},{"type":"strong","inlineContent":[{"type":"text","text":"이름이 있는 클로저"}]},{"type":"text","text":"입니다."},{"type":"text","text":" "},{"type":"text","text":"이게 무슨 소리냐면, 클로저에는 "},{"type":"strong","inlineContent":[{"type":"text","text":"Unnamed Closure"}]},{"type":"text","text":"와 "},{"type":"strong","inlineContent":[{"type":"text","text":"Named Closure"}]},{"type":"text","text":" 이렇게 두 가지 종류가 있습니다."}]},{"type":"codeListing","syntax":"swift","code":["func foo() {","  print(\"Actually, I'm Named Closure\")","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"저희가 줄곧 사용해왔던 위와 같은 "},{"type":"strong","inlineContent":[{"type":"text","text":"함수"}]},{"type":"text","text":"라는 녀석은 사실 "},{"type":"strong","inlineContent":[{"type":"text","text":"Named Closure"}]},{"type":"text","text":"였던 것이죠."}]},{"type":"codeListing","syntax":"swift","code":["let boo = { print(\"I'm Unnamed Closure\") }"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"그리고 지금까지 감으로 사용해오던 윗 놈은 "},{"type":"strong","inlineContent":[{"type":"text","text":"Unnamed Closure"}]},{"type":"text","text":"이지만, 편의상 Named Closure를 함수라고 부르기 때문에 줄여서 그냥 “Closure”라고 불렀던 것입니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"자 그래서 클로저란 놈은 어떻게 생겼느냐? 하시면"}]},{"type":"codeListing","syntax":"swift","code":["{ (Parameters) -> Return in","  \/\/ tasks","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"이렇게 생겼습니다. Swift를 사용하다보면 굉장히 자주 나오기 때문에 은연중에 익숙해진 구조네요.."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"하지만 제대로 학습해보기 위해 구조를 뜯어내보겠습니다. 클로저는 in을 기준으로 두 가지 부분으로 나눌 수 있습니다."},{"type":"text","text":" "},{"type":"text","text":"인자와 반환형으로 이루어진 "},{"type":"strong","inlineContent":[{"type":"text","text":"Closure Head"}]},{"type":"text","text":"와 실행부가 있는 "},{"type":"strong","inlineContent":[{"type":"text","text":"Closure Body"}]},{"type":"text","text":"이죠."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"사실 쓸 줄만 알면 됐지 용어는 중요한 게 아니니 예시 하나만 간단히 보고 넘어갑시다!"}]},{"type":"codeListing","syntax":"swift","code":["let boo = { (title: String) -> String in ","  return \"Title: \\(title)\"","}"]},{"anchor":"클로저의-기능-사용법","level":2,"type":"heading","text":"클로저의 기능, 사용법"},{"type":"paragraph","inlineContent":[{"type":"text","text":"지금부터는 클로저가 할 수 있는 기본적인 기능을 알아보겠습니다. 함수와 같은 놈인걸 알았으니 함수의 기능들을 생각해보면서 보면 나름 쉽습니다!"}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"1. 함수의 인자로서 사용될 수 있다."}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"기능 첫 번째! 처음 마주쳤을 때 가장 당황했던 기능입니다. 웬 처음보는 구조가 함수 인자로 떡하니 자리를 잡고 있는데, 괄호에 화살표에 어질어질했던 기억이 있네요."}]},{"type":"codeListing","syntax":"swift","code":["func foo(closure: () -> ()) {","  closure()","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"위와 같이 함수를 인자로 받는 함수 형태를 사용할 수 있다는 점 아시나요? 개인적으로 익숙하지는 않아서 인지만 해두고 직접 사용하지는 않던 기능인데요, 여기에 클로저를 사용하게 되면 사실은 자주 사용하던 기능이라는 사실을 깨닫게 됩니다. 참고로 위 예시에서 closure()는 함수입니다!"}]},{"type":"codeListing","syntax":"swift","code":["foo(closure: { () -> () in","  print(\"Hi! I'm Closure\")","})"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"처음 보시는 분들이 여기서 헤롱헤롱하고 계실테니 자세히 살펴보겠습니다. 자세히 보면,"}]},{"type":"codeListing","syntax":"swift","code":["{ () -> () in","  print(\"Hi! I'm Closure\")","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"이 부분.. 보이시나요? 뭔가 굉장히 길어보이지만 그냥 하나의 클로저입니다. 이 클로저가 closure라는 이름으로 foo() 함수의 인자로서 전달된 것이죠."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"이게 보이고나면 위 구조는 생각보다 간단해집니다. “Hi! I’m Closure”라는 String을 출력하는 함수 "},{"type":"codeVoice","code":"closure()"},{"type":"text","text":"가 "},{"type":"codeVoice","code":"foo()"},{"type":"text","text":" 함수의 인자로 전달되어 실행되는 구조인 것이죠."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"2. 함수의 반환으로서도 사용될 수 있다."}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"두 번째 기능은 빠르게 살펴봅시다! 함수의 인자로 클로저를 사용할 수 있다면 반환 타입으로도 사용될 수 있겠죠?"}]},{"type":"codeListing","syntax":"swift","code":["func foo() -> () -> () {","  return { () -> () in","    print(\"Hi! I'm Closure\")","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"네 맞아요. 얘도 만만치 않게 복잡해보입니다. 하지만 우리의 애플은 "},{"type":"codeVoice","code":"() -> () -> ()"},{"type":"text","text":" 같은 애매한 표현을 좋아하지 않아요."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"저 형태 그대로 사용될 일은 거의 없으니 해당 파트에서 다시 정리해보겠습니다."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"3. 변수\/상수에 사용할 수 있다."}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"사실 제일 기본적인 형태입니다."}]},{"type":"codeListing","syntax":"swift","code":["let closure = { () -> () in","  print(\"Hi! I'm Closure\")","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"보통 return으로 변수\/상수에 값을 넣어주게 됩니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"여기까지가 클로저의 기본 개념이라고 할 수 있습니다. 다음 게시물에서는 제가 이렇게 정리하게 만든 원흉인 @escaping closure 위주로 작성해보겠습니다!"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/junnosblog\/01.closure01"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/01.Closure01","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"팔방미인 클로저에 대해 알아봅시다."}],"kind":"article","metadata":{"roleHeading":"Article","title":"🍎 Swift - 클로저(Closure).01","role":"article","modules":[{"name":"아요에스위프트"}]},"hierarchy":{"paths":[["doc:\/\/JunnosBlog\/documentation\/JunnosBlog","doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/SwiftCategory"]]},"seeAlsoSections":[{"title":"Posts","identifiers":["doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/32.Regex01","doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/10.ViewControllerLifeCycle","doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/09.StructClass","doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/08.ARC","doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/07.Coordinator","doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/06.MVVM_CleanArchitecture02","doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/05.MVVM_CleanArchitecture01","doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/04.RxSwift","doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/03.Closure03","doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/02.Closure02"],"generated":true}],"references":{"doc://JunnosBlog/documentation/JunnosBlog/04.RxSwift":{"role":"article","title":"🍎 Swift - RxSwift","abstract":[{"type":"text","text":"Reactive한 Swift의 시작"}],"identifier":"doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/04.RxSwift","kind":"article","type":"topic","url":"\/documentation\/junnosblog\/04.rxswift"},"doc://JunnosBlog/documentation/JunnosBlog/03.Closure03":{"role":"article","title":"🍎 Swift - 클로저(Closure).03","abstract":[{"type":"codeVoice","code":"@escaping"},{"type":"text","text":" 클로저에 대해 알아봅시다."}],"identifier":"doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/03.Closure03","kind":"article","type":"topic","url":"\/documentation\/junnosblog\/03.closure03"},"doc://JunnosBlog/documentation/JunnosBlog/32.Regex01":{"role":"article","title":"🍎 Swift - Regex.01","abstract":[{"type":"text","text":"아는 사람들은 잘 써먹는 그것."}],"identifier":"doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/32.Regex01","kind":"article","type":"topic","url":"\/documentation\/junnosblog\/32.regex01"},"doc://JunnosBlog/documentation/JunnosBlog":{"role":"collection","title":"아요에스위프트","abstract":[],"identifier":"doc:\/\/JunnosBlog\/documentation\/JunnosBlog","kind":"symbol","type":"topic","url":"\/documentation\/junnosblog"},"doc://JunnosBlog/documentation/JunnosBlog/SwiftCategory":{"images":[{"type":"card","identifier":"Swift.png"}],"role":"collectionGroup","title":"Swift","abstract":[{"type":"text","text":"This is Swift."}],"identifier":"doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/SwiftCategory","kind":"article","type":"topic","url":"\/documentation\/junnosblog\/swiftcategory"},"doc://JunnosBlog/documentation/JunnosBlog/02.Closure02":{"role":"article","title":"🍎 Swift - 클로저(Closure).02","abstract":[{"type":"text","text":"Trailing 클로저에 대해 알아봅시다."}],"identifier":"doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/02.Closure02","kind":"article","type":"topic","url":"\/documentation\/junnosblog\/02.closure02"},"doc://JunnosBlog/documentation/JunnosBlog/06.MVVM_CleanArchitecture02":{"role":"article","title":"🍎 Swift - MVVM, Clean Architecture.02","abstract":[{"type":"text","text":"두 아키텍처를 결합해봅시다."}],"identifier":"doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/06.MVVM_CleanArchitecture02","kind":"article","type":"topic","url":"\/documentation\/junnosblog\/06.mvvm_cleanarchitecture02"},"doc://JunnosBlog/documentation/JunnosBlog/08.ARC":{"role":"article","title":"🍎 Swift - ARC(strong, weak, unowned)","abstract":[{"type":"text","text":"쎈 애랑 약한 애랑 없는 애"}],"identifier":"doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/08.ARC","kind":"article","type":"topic","url":"\/documentation\/junnosblog\/08.arc"},"doc://JunnosBlog/documentation/JunnosBlog/07.Coordinator":{"role":"article","title":"🍎 Swift - Coordinator 패턴","abstract":[{"type":"text","text":"Navigation 해결사 등장"}],"identifier":"doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/07.Coordinator","kind":"article","type":"topic","url":"\/documentation\/junnosblog\/07.coordinator"},"doc://JunnosBlog/documentation/JunnosBlog/10.ViewControllerLifeCycle":{"role":"article","title":"🍎 Swift - View Controller의 Life Cycle","abstract":[{"type":"text","text":"View Controller의 삶과 죽음"}],"identifier":"doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/10.ViewControllerLifeCycle","kind":"article","type":"topic","url":"\/documentation\/junnosblog\/10.viewcontrollerlifecycle"},"Swift.png":{"alt":"Swift","type":"image","identifier":"Swift.png","variants":[{"url":"\/images\/Swift.png","traits":["1x","light"]}]},"doc://JunnosBlog/documentation/JunnosBlog/09.StructClass":{"role":"article","title":"🍎 Swift - Struct vs Class","abstract":[{"type":"text","text":"구조체와 클래스"}],"identifier":"doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/09.StructClass","kind":"article","type":"topic","url":"\/documentation\/junnosblog\/09.structclass"},"doc://JunnosBlog/documentation/JunnosBlog/05.MVVM_CleanArchitecture01":{"role":"article","title":"🍎 Swift - MVVM, Clean Architecture.01","abstract":[{"type":"text","text":"iOS 개발자라면 꼭 알아야 할 아키텍처"}],"identifier":"doc:\/\/JunnosBlog\/documentation\/JunnosBlog\/05.MVVM_CleanArchitecture01","kind":"article","type":"topic","url":"\/documentation\/junnosblog\/05.mvvm_cleanarchitecture01"}}}